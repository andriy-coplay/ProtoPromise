name: Unity Tests

on: [pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  unity-tests:
    name: Test (${{ matrix.testMode.name }}, ${{ matrix.mode.name }}, ${{ matrix.objectPooling.name }}, ${{ matrix.unityVersion }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - {
              name: Editor,
              value: PlayMode,
              buildTargetId: 1
            }
          - {
              name: Standalone,
              value: Standalone,
              buildTargetId: 1
            }
          # Not testing WebGL as unity-test-runner does not support it.
          #- {
          #    name: WebGL,
          #    value: WebGL,
          #    buildTargetId: 13
          #  }
        mode:
          - {
              name: Release,
              symbol: PROTO_PROMISE_DEBUG_DISABLE
            }
          - {
              name: Debug,
              symbol: PROTO_PROMISE_DEBUG_ENABLE
            }
        objectPooling:
          - {
              name: Pool_Enabled,
              symbol: PROTO_PROMISE_POOL_ENABLE
            }
          - {
              name: Pool_Disabled,
              symbol: PROTO_PROMISE_POOL_DISABLE
            }
        # Editor uses 2018.4 to test netstandard2.0 in Mono.
        # Standalone uses 2019.4 and 2021.3 to test IL2CPP with netstandard2.0 and netstandard2.1.
        unityVersion: [2018.4.36f1, 2019.4.40f1, 2021.3.29f1]

        exclude:
          # DEBUG mode forces pooling disabled.
          - {
              mode: { name: Debug },
              objectPooling: { name: Pool_Enabled }
            }
          # Editor tests only run in 2018.4 to keep CI times down.
          - {
              testMode: { name: Editor },
              unityVersion: 2019.4.40f1
            }
          - {
              testMode: { name: Editor },
              unityVersion: 2021.3.29f1
            }
          # Standalone with IL2CPP can only be built with 2019.4+ (unity-builder docker images constraint).
          - {
              testMode: { name: Standalone },
              unityVersion: 2018.4.36f1
            }

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rewrite ProjectSettings
        run: |
          DefineSymbols="${{ matrix.mode.symbol }};${{ matrix.objectPooling.symbol }}"
          DefineOriginal="  scriptingDefineSymbols: {}"
          DefineReplace="  scriptingDefineSymbols: \\n    ${{ matrix.testMode.buildTargetId }}: $DefineSymbols"
          sed -i "{s/$DefineOriginal/$DefineReplace/g}" ProtoPromise_Unity/ProjectSettings/ProjectSettings.asset

      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2018_4_36F1_UBUNTU }}
        with:
          projectPath: ProtoPromise_Unity
          testMode: ${{ matrix.testMode.value }}
          unityVersion: ${{ matrix.unityVersion }}
        timeout-minutes: 180

      # Workaround for NUnit XML (see https://github.com/dorny/test-reporter/issues/98#issuecomment-867106931)
      - name: Install NUnit
        if: always()
        run: |
          nuget install NUnit.Console -Version 3.12.0

      - name: Fetch transform code
        if: always()
        run: |
          wget https://raw.githubusercontent.com/nunit/nunit-transforms/master/nunit3-junit/nunit3-junit.xslt
        shell: bash

      - name: Transform NUnit3 to JUnit
        if: always()
        run: |
          Get-ChildItem . -Filter artifacts/*.xml | Foreach-Object {
            $xml = Resolve-Path $_.FullName
            $output = Join-Path ($pwd) ($_.BaseName + '_junit.xml')
            $xslt = New-Object System.Xml.Xsl.XslCompiledTransform;
            $xslt.Load("nunit3-junit.xslt");
            $xslt.Transform($xml, $output);
          }
        shell: pwsh

      - uses: dorny/test-reporter@v1
        if: always()
        with:
          name: unity-test-results-${{ matrix.testMode.name }}-${{ matrix.mode.name }}-${{ matrix.objectPooling.name }}-${{ matrix.unityVersion }}
          path: "*_junit.xml"
          reporter: java-junit

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: unity-test-results-${{ matrix.testMode.name }}-${{ matrix.mode.name }}-${{ matrix.objectPooling.name }}-${{ matrix.unityVersion }}
          path: artifacts
