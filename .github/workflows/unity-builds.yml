# This workflow is to make sure platforms will build properly in all runtimes and with all configurations,
# because it is currently not possible to run platform tests in cloud CI.

name: Unity Builds

on: [pull_request]

jobs:
  unity-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Disabled Standalone and WebGL as they do not work in a docker image.
        buildTarget: [StandaloneLinux64, WebGL]
        scriptingRuntime: [Net3.5, Net4.x]
        scriptingBackend: [Mono, IL2CPP]
        mode: [Release, Debug]
        progress: [Progress_Enabled, Progress_Disabled]
        
        # WebGL only supports IL2CPP
        exclude:
          - buildTarget: WebGL
            scriptingBackend: Mono

        include:
          - buildTarget: StandaloneLinux64
            buildTargetId: 1
          - buildTarget: WebGL
            buildTargetId: 13

          - mode: Release
            modeSymbol: PROTO_PROMISE_DEBUG_DISABLE
          - mode: Debug
            modeSymbol: PROTO_PROMISE_DEBUG_ENABLE

          - progress: Progress_Enabled
            progressSymbol: PROTO_PROMISE_PROGRESS_ENABLE
          - progress: Progress_Disabled
            progressSymbol: PROTO_PROMISE_PROGRESS_DISABLE

          - scriptingRuntime: Net3.5
            scriptingRuntimeVersion: 0
            apiCompatibilityLevel: 2
          - scriptingRuntime: Net4.x
            scriptingRuntimeVersion: 1
            apiCompatibilityLevel: 6
            
          - scriptingBackend: Mono
            scriptingBackendId: 0
          - scriptingBackend: IL2CPP
            scriptingBackendId: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rewrite ProjectSettings
        run: |
          DefineSymbols="${{ matrix.modeSymbol }};${{ matrix.progressSymbol }}"
          DefineOriginal="  scriptingDefineSymbols: {}"
          DefineReplace="  scriptingDefineSymbols: \\n    ${{ matrix.buildTargetId }}: $DefineSymbols"
          sed -i "{s/$DefineOriginal/$DefineReplace/g}" ProtoPromise_Unity/ProjectSettings/ProjectSettings.asset

          RuntimeOriginal="  scriptingRuntimeVersion: 0"
          RuntimeReplace="  scriptingRuntimeVersion: ${{ matrix.scriptingRuntimeVersion }}"
          sed -i "{s/$RuntimeOriginal/$RuntimeReplace/g}" ProtoPromise_Unity/ProjectSettings/ProjectSettings.asset

          ApiOriginal="  apiCompatibilityLevel: 2"
          ApiReplace="  apiCompatibilityLevel: ${{ matrix.apiCompatibilityLevel }}"
          sed -i "{s/$ApiOriginal/$ApiReplace/g}" ProtoPromise_Unity/ProjectSettings/ProjectSettings.asset

          BackendOriginal="  scriptingBackend: {}"
          BackendReplace="  scriptingBackend: \\n    Standalone: ${{ matrix.scriptingBackendId }}"
          sed -i "{s/$BackendOriginal/$BackendReplace/g}" ProtoPromise_Unity/ProjectSettings/ProjectSettings.asset

      - name: Build Project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2018_4_36F1_UBUNTU }}
        with:
          projectPath: ProtoPromise_Unity
          targetPlatform: ${{ matrix.buildTarget }}
          allowDirtyBuild: true

      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build